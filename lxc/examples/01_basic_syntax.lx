# Basic Syntax Examples
# Demonstrates fundamental Lx language features

def basic_variables() do
  # Variables and assignment
  name = "Alice"
  age = 30
  is_active = true
  score = 95.5

  # Return a tuple with all values
  {name, age, is_active, score}
end

def basic_expressions() do
  # Basic expressions
  result = do
    x = 10
    y = 20
    x + y  # Returns 30
  end

  result
end

def function_definitions() do
  # Function calls
  message = greet("Bob")
  sum = add(5, 3)

  {message, sum}
end

def greet(person_name) do
  "Hello, " ++ person_name
end

def add(a, b) do
  a + b
end

def basic_control_flow() do
  age = 30

  if age >= 18 do
    "Adult"
  else
    "Minor"
  end
end

def data_types() do
  # Basic data types
  string_val = "Hello World"
  integer_val = 42
  float_val = 3.14
  boolean_val = true
  atom_val = :ok
  nil_val = nil

  {string_val, integer_val, float_val, boolean_val, atom_val, nil_val}
end

def string_operations() do
  # String concatenation
  first = "Hello"
  second = "World"
  combined = first ++ " " ++ second

  combined
end

def arithmetic_operations() do
  a = 10
  b = 5
  addition = a + b
  subtraction = a - b
  multiplication = a * b
  division = a / b

  {addition, subtraction, multiplication, division}
end

def comparison_operators() do
  a = 10
  b = 5
  is_equal = a == b
  is_not_equal = a != b
  is_less = a < b
  is_greater = a > b
  is_less_equal = a <= b
  is_greater_equal = a >= b

  {is_equal, is_not_equal, is_less, is_greater, is_less_equal, is_greater_equal}
end

def logical_operators() do
  # Logical operators
  logical_and = true andalso false
  logical_or = true orelse false
  logical_not = not true

  # Symbolic logical operators (equivalent)
  symbolic_and = true && false
  symbolic_or = true || false

  {logical_and, logical_or, logical_not, symbolic_and, symbolic_or}
end