@doc "This function greets a user"
def greet(name) do
    "Hello, #{name}!"
end

def test_interpolation(name, age) do
    "Hello, #{name}! You are #{age} years old."
end

def test_anonymous_functions() do
    double = fn(x) -> x * 2 end
    numbers = [1, 2, 3, 4, 5]
    doubled = map(double, numbers)
    doubled
end

def test_multihead_lambdas() do
    pattern_matcher = fn do
        (:ok) -> "success"
        (:error) -> "failure"
        (_) -> "unknown"
    end

    # Lambda calls with dot syntax
    result1 = pattern_matcher.(:ok)
    result2 = pattern_matcher.(:error)
    [result1, result2]
end

def test_list_comprehensions() do
    numbers = [1, 2, 3, 4, 5]
    squares = [x * x || x <- numbers, x > 2]
    squares
end

describe "Math operations" do
    test "addition works" do
        result = 2 + 2
        assert result == 4
    end

    test "multiplication works" do
        result = 3 * 4
        assert result == 12
    end
end

def map(func, list) do
    [func(x) || x <- list]
end
def main() do
    greet()
end
