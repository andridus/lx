# Simple OTP Worker example with basic syntax
# This demonstrates the new gen_server style callbacks

worker simple_server {
  # Required init function - must have 1 parameter and return a tuple
  fun init(args) {
    {:ok, 0}
  }

  # handle_call - must have 3 parameters (Request, From, State) and return a tuple
  fun handle_call(get_count, from, state) {
    {:reply, state, state}
  }

  # handle_cast - must have 2 parameters (Request, State) and return a tuple
  fun handle_cast(reset, state) {
    {:noreply, 0}
  }

  # handle_info - must have 2 parameters (Info, State) and return a tuple
  fun handle_info(timeout, state) {
    {:noreply, state}
  }

  # terminate - must have 2 parameters (Reason, State) and return a tuple
  fun terminate(reason, state) {
    {:ok}
  }

  # code_change - must have 3 parameters (OldVsn, State, Extra) and return a tuple
  fun code_change(old_vsn, state, extra) {
    {:ok, state}
  }

  # format_status - must have 1 parameter, can return anything
  fun format_status(status) {
    "active"
  }
}

# Test examples
test "server should start correctly" {
  result = init([])
  result
}

describe "basic operations" {
  test "should compile correctly" {
    x = 1
    x
  }
}